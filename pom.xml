<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.kwanyon.com</groupId>
    <artifactId>kwanyon-binlog-java</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>

    <properties>
        <!-- 项目总版本号统一管理 -->
        <revision>0.1.0</revision>
        <kwanyon-starter.version>${revision}</kwanyon-starter.version>
        <!-- Java 版本 -->
        <jdk.version>11</jdk.version>
        <maven.compiler.source>${jdk.version}</maven.compiler.source>
        <maven.compiler.target>${jdk.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>


        <!-- Spring 版本 5.3.23, 小于5.3.26版本存在权限绕过漏洞 -->
        <springframework.version>5.3.26</springframework.version>
        <!-- Spring 版本管理 -->
        <spring-boot.version>2.7.10</spring-boot.version>
        <!-- SpringCloud 版本管理 -->
        <spring-cloud.version>2021.0.6</spring-cloud.version>
        <!-- spring-阿里巴巴 相关-->
        <spring-cloud-alibaba.version>2021.0.5.0</spring-cloud-alibaba.version>


        <!-- BinLog 连接组件版本 -->
        <zendesk.binlog.version>0.27.5</zendesk.binlog.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${springframework.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>
        <!-- MySQL binlog 日志监听 https://github.com/osheroff/mysql-binlog-connector-java -->
        <dependency>
            <groupId>com.zendesk</groupId>
            <artifactId>mysql-binlog-connector-java</artifactId>
            <version>${zendesk.binlog.version}</version>
        </dependency>

        <!-- 必须引入框架,整合 springboot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <!-- 可根据个人习惯 或 项目技术栈 选择性引入 或 移除 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!-- 日志依赖，可结合项目中使用的日志框架进行选择性引入 或 移除  -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

    </dependencies>


    <!-- 发布代码 -->
    <distributionManagement>
        <!-- 发布环境仓库地址 -->
        <repository>
            <id>rdc-releases</id>
            <name>rdc-release</name>
            <url>云效制品仓库或者nexus私服地址</url>
        </repository>
        <!-- 快照版本仓库地址 -->
        <snapshotRepository>
            <id>rdc-snapshots</id>
            <name>rdc-snapshots</name>
            <url>云效制品仓库或者nexus私服地址</url>
        </snapshotRepository>
    </distributionManagement>


    <build>
        <plugins>
            <!-- 发布 jar （class 文件）到中央仓库 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <!-- 发布 源码（.java）到中央仓库 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <!-- 版本号动态管理 https://maven.apache.org/maven-ci-friendly.html -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>